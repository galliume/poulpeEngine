Notes about my understanding of Vulkan.
should be enough to draw a triangle...

//preparation
glfwCreateWindow
glfwGetWindowSize
glfwGetRequiredInstanceExtensions

vkCreateInstance
CreateDebugUtilsMessengerEXT
vkEnumeratePhysicalDevices
vkGetPhysicalDeviceQueueFamilyProperties
vkCreateDevice
vkCreateWin32SurfaceKHR (glfwCreateWindowSurface)
vkGetPhysicalDeviceSurfaceSupportKHR
vkGetPhysicalDeviceSurfaceFormatsKHR
vkCreateSwapchainKHR
vkCreateSemaphore (acquire and release)
vkGetDeviceQueue
vkCreateRenderPass
//load shaders
//pipelinecache ?
vkCreatePipelineLayout
vkCreateGraphicsPipelines
vkGetSwapchainImagesKHR
vkCreateImageView (as much as swapChainImages.size())
vkCreateFramebuffer (as much as swapChainImages.size())
vkCreateCommandPool
vkAllocateCommandBuffers

//main loop
while (true) {

	glfwPollEvents
	vkAcquireNextImageKHR
	vkResetCommandPool
	vkBeginCommandBuffer
	vkCmdBeginRenderPass
	vkCmdSetViewport
	vkCmdSetScissor
	vkCmdBindPipeline
	vkCmdDraw
	vkCmdEndRenderPass
	vkEndCommandBuffer
	vkQueueSubmit
	vkQueuePresentKHR
	vkDeviceWaitIdle
	
}

glfwDestroyWindow
vkDestroyInstance