.TH "ktx_create" 1 "Wed Mar 20 2024" "Version 4.3.2" "KTX Tools Reference" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ktx_create \- ktx create 
Create a KTX2 file from various input files\&.
.SH "SYNOPSIS"
.PP
ktx create [option\&.\&.\&.] \fIinput-file\fP\&.\&.\&. \fIoutput-file\fP 
.SH "DESCRIPTION"
.PP
\fBktx\fP \fBcreate\fP can create, encode and supercompress a KTX2 file from the input images specified as the \fIinput-file\fP\&.\&.\&. arguments and save it as the \fIoutput-file\fP\&. The last positional argument is treated as the \fIoutput-file\fP\&. If the \fIinput-file\fP is '-' the file will be read from the stdin\&. If the \fIoutput-path\fP is '-' the output file will be written to the stdout\&.
.PP
Each \fIinput-file\fP must be a valid EXR (\&.exr), PNG (\&.png) or Raw (\&.raw) file\&. PNG files with luminance (L) or luminance + alpha (LA) data will be converted to RGB as LLL and RGBA as LLLA before processing further\&. The input file formats must be compatible with the requested KTX format enum and must have at least the same level of precision and number of channels\&. Any unused channel will be discarded silently\&.
.PP
The number of input-files specified must match the expected number of input images based on the used options\&.
.PP
The following options are available: 
.IP "\fB--format <enum> \fP" 1c
KTX format enum that specifies the image data format\&. The enum names are matching the VkFormats without the VK_FORMAT_ prefix\&. The VK_FORMAT_ prefix is ignored if present\&.
.br
 When used with --encode it specifies the format of the input files before the encoding step\&. In this case it must be one of: 
.PD 0

.IP "\(bu" 2
R8_UNORM 
.IP "\(bu" 2
R8_SRGB 
.IP "\(bu" 2
R8G8_UNORM 
.IP "\(bu" 2
R8G8_SRGB 
.IP "\(bu" 2
R8G8B8_UNORM 
.IP "\(bu" 2
R8G8B8_SRGB 
.IP "\(bu" 2
R8G8B8A8_UNORM 
.IP "\(bu" 2
R8G8B8A8_SRGB 
.PP
If the format is an ASTC format the ASTC encoder specific options become valid, otherwise they are ignored\&.
.br
 The format will be used to verify and load all input files into a texture before encoding\&.
.br
 Case insensitive\&. Required\&. 
.IP "\fB--astc-quality <level> \fP" 1c
The quality level configures the quality-performance tradeoff for the compressor; more complete searches of the search space improve image quality at the expense of compression time\&. Default is 'medium'\&. The quality level can be set between fastest (0) and exhaustive (100) via the following fixed quality presets: Level  Quality  fastest  (equivalent to quality = 0)  fast  (equivalent to quality = 10)  medium  (equivalent to quality = 60)  thorough  (equivalent to quality = 98)  exhaustive  (equivalent to quality = 100)  
.IP "\fB--astc-perceptual \fP" 1c
The codec should optimize for perceptual error, instead of direct RMS error\&. This aims to improve perceived image quality, but typically lowers the measured PSNR score\&. Perceptual methods are currently only available for normal maps and RGB color data\&. 
.PP
.IP "\fB--1d \fP" 1c
Create a 1D texture\&. If not set the texture will be a 2D or 3D texture\&. 
.IP "\fB--cubemap \fP" 1c
Create a cubemap texture\&. If not set the texture will be a 2D or 3D texture\&. 
.IP "\fB--raw \fP" 1c
Create from raw image data\&. 
.IP "\fB--width \fP" 1c
Base level width in pixels\&. 
.IP "\fB--height \fP" 1c
Base level height in pixels\&. 
.IP "\fB--depth \fP" 1c
Base level depth in pixels\&. If set the texture will be a 3D texture\&. 
.IP "\fB--layers \fP" 1c
Number of layers\&. If set the texture will be an array texture\&. 
.IP "\fB--runtime-mipmap \fP" 1c
Runtime mipmap generation mode\&. Sets up the texture to request the mipmaps to be generated by the client application at runtime\&. 
.IP "\fB--generate-mipmap \fP" 1c
Causes mipmaps to be generated during texture creation\&. If the --levels is not specified the maximum possible mip level will be generated\&. This option is mutually exclusive with --runtime-mipmap and cannot be used with SINT, UINT or 3D textures\&. When set it enables the use of the following \\'Generate Mipmap\\' options\&. 
.IP "\fB--mipmap-filter <filter> \fP" 1c
Specifies the filter to use when generating the mipmaps\&. Case insensitive\&.
.br
 Possible options are: box | tent | bell | b-spline | mitchell | blackman | lanczos3 | lanczos4 | lanczos6 | lanczos12 | kaiser | gaussian | catmullrom | quadratic_interp | quadratic_approx | quadratic_mix\&. Defaults to lanczos4\&. 
.IP "\fB--mipmap-filter-scale <float> \fP" 1c
The filter scale to use\&. Defaults to 1\&.0\&. 
.IP "\fB--mipmap-wrap <mode> \fP" 1c
Specify how to sample pixels near the image boundaries\&. Case insensitive\&.
.br
 Possible options are: wrap | reflect | clamp\&. Defaults to clamp\&. 
.PP
.PP
.IP "\fB--encode basis-lz | uastc< \fP" 1c
Encode the texture with the specified codec before saving it\&. This option matches the functionality of the \fBktx encode\fP command\&. With each encoding option the following encoder specific options become valid, otherwise they are ignored\&. Case-insensitive\&.
.PP
.IP "\fBbasis-lz:  \fP" 1c
Supercompress the image data with ETC1S / BasisLZ\&. RED images will become RGB with RED in each component (RRR)\&. RG images will have R in the RGB part and G in the alpha part of the compressed texture (RRRG)\&. When set, the following BasisLZ-related options become valid, otherwise they are ignored\&. 
.PP
.IP "\fB--clevel <level> \fP" 1c
ETC1S / BasisLZ compression level, an encoding speed vs\&. quality tradeoff\&. Range is [0,5], default is 1\&. Higher values are slower but give higher quality\&. 
.IP "\fB--qlevel <level> \fP" 1c
ETC1S / BasisLZ quality level\&. Range is [1,255]\&. Lower gives better compression/lower quality/faster\&. Higher gives less compression/higher quality/slower\&. \fB--qlevel\fP automatically determines values for \fB--max-endpoints\fP, \fB--max-selectors\fP, \fB--endpoint-rdo-threshold\fP and \fB--selector-rdo-threshold\fP for the target quality level\&. Setting these options overrides the values determined by -qlevel which defaults to 128 if neither it nor \fB--max-endpoints\fP and \fB--max-selectors\fP have been set\&.
.PP
Note that both of \fB--max-endpoints\fP and \fB--max-selectors\fP must be set for them to have any effect\&. If all three options are set, a warning will be issued that \fB--qlevel\fP will be ignored\&.
.PP
Note also that \fB--qlevel\fP will only determine values for \fB--endpoint-rdo-threshold\fP and \fB--selector-rdo-threshold\fP when its value exceeds 128, otherwise their defaults will be used\&. 
.IP "\fB--max-endpoints <arg> \fP" 1c
Manually set the maximum number of color endpoint clusters\&. Range is [1,16128]\&. Default is 0, unset\&. 
.IP "\fB--endpoint-rdo-threshold <arg> \fP" 1c
Set endpoint RDO quality threshold\&. The default is 1\&.25\&. Lower is higher quality but less quality per output bit (try [1\&.0,3\&.0])\&. This will override the value chosen by \fB--qlevel\fP\&. 
.IP "\fB--max-selectors <arg> \fP" 1c
Manually set the maximum number of color selector clusters from [1,16128]\&. Default is 0, unset\&. 
.IP "\fB--selector-rdo-threshold <arg> \fP" 1c
Set selector RDO quality threshold\&. The default is 1\&.25\&. Lower is higher quality but less quality per output bit (try [1\&.0,3\&.0])\&. This will override the value chosen by \fB--qlevel\fP\&. 
.IP "\fB--no-endpoint-rdo \fP" 1c
Disable endpoint rate distortion optimizations\&. Slightly faster, less noisy output, but lower quality per output bit\&. Default is to do endpoint RDO\&. 
.IP "\fB--no-selector-rdo \fP" 1c
Disable selector rate distortion optimizations\&. Slightly faster, less noisy output, but lower quality per output bit\&. Default is to do selector RDO\&. 
.PP
.PP
.IP "\fBuastc:  \fP" 1c
Create a texture in high-quality transcodable UASTC format\&. 
.PP
.IP "\fB--uastc-quality <level> \fP" 1c
This optional parameter selects a speed vs quality tradeoff as shown in the following table:
.PP
Level Speed Quality 0 Fastest 43\&.45dB 1 Faster 46\&.49dB 2 Default 47\&.47dB 3 Slower 48\&.01dB 4 Very slow 48\&.24dB 
.PP
You are strongly encouraged to also specify \fB--zstd\fP to losslessly compress the UASTC data\&. This and any LZ-style compression can be made more effective by conditioning the UASTC texture data using the Rate Distortion Optimization (RDO) post-process stage\&. When uastc encoding is set the following options become available for controlling RDO: 
.IP "\fB--uastc-rdo \fP" 1c
Enable UASTC RDO post-processing\&. 
.IP "\fB--uastc-rdo-l <lambda> \fP" 1c
Set UASTC RDO quality scalar (lambda) to \fIlambda\fP\&. Lower values yield higher quality/larger LZ compressed files, higher values yield lower quality/smaller LZ compressed files\&. A good range to try is [\&.25,10]\&. For normal maps a good range is [\&.25,\&.75]\&. The full range is [\&.001,10\&.0]\&. Default is 1\&.0\&.
.PP
Note that previous versions used the \fB--uastc-rdo-q\fP option which was removed because the RDO algorithm changed\&. 
.IP "\fB--uastc-rdo-d <dictsize> \fP" 1c
Set UASTC RDO dictionary size in bytes\&. Default is 4096\&. Lower values=faster, but give less compression\&. Range is [64,65536]\&. 
.IP "\fB--uastc-rdo-b <scale> \fP" 1c
Set UASTC RDO max smooth block error scale\&. Range is [1\&.0,300\&.0]\&. Default is 10\&.0, 1\&.0 is disabled\&. Larger values suppress more artifacts (and allocate more bits) on smooth blocks\&. 
.IP "\fB--uastc-rdo-s <deviation> \fP" 1c
Set UASTC RDO max smooth block standard deviation\&. Range is [\&.01,65536\&.0]\&. Default is 18\&.0\&. Larger values expand the range of blocks considered smooth\&. 
.IP "\fB--uastc-rdo-f \fP" 1c
Do not favor simpler UASTC modes in RDO mode\&. 
.IP "\fB--uastc-rdo-m \fP" 1c
Disable RDO multithreading (slightly higher compression, deterministic)\&. 
.PP
.PP
.IP "\fBcommon:  \fP" 1c
Common options\&. 
.PP
.IP "\fB--normal-mode \fP" 1c
Only valid for linear textures with two or more components\&. If the input texture has three or four linear components it is assumed to be a three component linear normal map storing unit length normals as (R=X, G=Y, B=Z)\&. A fourth component will be ignored\&. The map will be converted to a two component X+Y normal map stored as (RGB=X, A=Y) prior to encoding\&. If unsure that your normals are unit length, use \fB--normalize\fP\&. If the input has 2 linear components it is assumed to be an X+Y map of unit normals\&.
.PP
The Z component can be recovered programmatically in shader code by using the equations: 
.PP
.nf

    nml\&.xy = texture(\&.\&.\&.)\&.ga;              // Load in [0,1]
    nml\&.xy = nml\&.xy * 2\&.0 - 1\&.0;           // Unpack to [-1,1]
    nml\&.z = sqrt(1 - dot(nml\&.xy, nml\&.xy)); // Compute Z
            
.fi
.PP
 For ETC1S / BasisLZ encoding, \fB'--encode\fP basis-lz', RDO is disabled (no selector RDO, no endpoint RDO) to provide better quality\&. 
.IP "\fB--threads <count> \fP" 1c
Explicitly set the number of threads to use during compression\&. By default, ETC1S / BasisLZ will use the number of threads reported by thread::hardware_concurrency or 1 if value returned is 0\&. 
.IP "\fB--no-sse \fP" 1c
Forbid use of the SSE instruction set\&. Ignored if CPU does not support SSE\&. SSE can only be disabled on the basis-lz and uastc compressors\&. 
.PP
.PP
 
.IP "\fB--compare-ssim \fP" 1c
Calculate encoding structural similarity index measure (SSIM) and print it to stdout\&. Requires Basis-LZ or UASTC encoding\&. 
.IP "\fB--compare-psnr \fP" 1c
Calculate encoding peak signal-to-noise ratio (PSNR) and print it to stdout\&. Requires Basis-LZ or UASTC encoding\&. 
.PP
 
.PP
.IP "\fB--swizzle [rgba01]{4} \fP" 1c
KTX swizzle metadata\&. 
.IP "\fB--input-swizzle [rgba01]{4} \fP" 1c
Pre-swizzle input channels\&. 
.IP "\fB--assign-oetf <oetf> \fP" 1c
Force the created texture to have the specified transfer function, ignoring the transfer function of the input file(s)\&. Case insensitive\&. Possible options are: linear | srgb  
.IP "\fB--assign-primaries <primaries> \fP" 1c
Force the created texture to have the specified color primaries, ignoring the color primaries of the input file(s)\&. Case insensitive\&. Possible options are: none | bt709 | srgb | bt601-ebu | bt601-smpte | bt2020 | ciexyz | aces | acescc | ntsc1953 | pal525 | displayp3 | adobergb  
.IP "\fB--convert-oetf <oetf> \fP" 1c
Convert the input image(s) to the specified transfer function, if different from the transfer function of the input file(s)\&. If both this and --assign-oetf are specified, conversion will be performed from the assigned transfer function to the transfer function specified by this option, if different\&. Case insensitive\&. Possible options are: linear | srgb  
.IP "\fB--convert-primaries <primaries> \fP" 1c
Convert the image image(s) to the specified color primaries, if different from the color primaries of the input file(s) or the one specified by --assign-primaries\&. If both this and --assign-primaries are specified, conversion will be performed from the assigned primaries to the primaries specified by this option, if different\&. This option is not allowed to be specified when --assign-primaries is set to 'none'\&. Case insensitive\&. Possible options are: bt709 | srgb | bt601-ebu | bt601-smpte | bt2020 | ciexyz | aces | acescc | ntsc1953 | pal525 | displayp3 | adobergb  
.IP "\fB--fail-on-color-conversions \fP" 1c
Generates an error if any of the input images would need to be color converted\&. 
.IP "\fB--warn-on-color-conversions \fP" 1c
Generates a warning if any of the input images are color converted\&. 
.PP
.IP "\fB--zstd <level> \fP" 1c
Supercompress the data with Zstandard\&. Cannot be used with ETC1S / BasisLZ format\&. Level range is [1,22]\&. Lower levels give faster but worse compression\&. Values above 20 should be used with caution as they require more memory\&.  
.IP "\fB--zlib <level> \fP" 1c
Supercompress the data with ZLIB\&. Cannot be used with ETC1S / BasisLZ format\&. Level range is [1,9]\&. Lower levels give faster but worse compression\&.  
.PP
 
.IP "\fB-h, --help \fP" 1c
Print this usage message and exit\&. 
.IP "\fB-v, --version \fP" 1c
Print the version number of this program and exit\&. 
.PP
 
.SH "EXIT STATUS"
.PP
.IP "\(bu" 2
0 - Success
.IP "\(bu" 2
1 - Command line error
.IP "\(bu" 2
2 - IO failure
.IP "\(bu" 2
3 - Invalid input file
.IP "\(bu" 2
4 - Runtime or library error
.IP "\(bu" 2
5 - Not supported state or operation
.IP "\(bu" 2
6 - Requested feature is not yet implemented 
.PP
 
.SH "HISTORY"
.PP
\fBVersion 4\&.0\fP
.RS 4

.IP "\(bu" 2
Initial version
.PP
.RE
.PP
.SH "AUTHOR"
.PP
.IP "\(bu" 2
Mátyás Császár [Vader], RasterGrid www\&.rastergrid\&.com
.IP "\(bu" 2
Daniel Rákos, RasterGrid www\&.rastergrid\&.com 
.PP

