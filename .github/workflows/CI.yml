name: PoulpeEngine
permissions:
  contents: read
  security-events: write

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            cmake_preset: linux-release
          - os: windows-latest
            cmake_preset: windows-release
            
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          path: main

      - name: Install Dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install build-essential xorg-dev libglu1-mesa-dev \
            libvulkan1 mesa-vulkan-drivers clang ninja-build sqlite3 libsqlite3-dev

      - name: Install VulkanSDK (Linux)
        if: runner.os == 'Linux'
        run: |
          wget -qO- https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo tee /etc/apt/trusted.gpg.d/lunarg.asc
          sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-noble.list http://packages.lunarg.com/vulkan/lunarg-vulkan-noble.list
          sudo apt update
          sudo apt install vulkan-sdk

      - name: Install VulkanSDK (Windows)
        if: runner.os == 'Windows'
        run: |
          $ErrorActionPreference = 'Stop'
          $client = New-Object System.Net.WebClient
          $client.DownloadFile("https://sdk.lunarg.com/sdk/download/latest/windows/vulkan_sdk.exe", "$env:RUNNER_TEMP\vulkan_sdk.exe")
          Start-Process -FilePath "$env:RUNNER_TEMP\vulkan_sdk.exe" -ArgumentList "/S" -Wait
          $vulkanPath = Get-ChildItem "C:\VulkanSDK" | Sort-Object Name -Descending | Select-Object -First 1
          $env:VULKAN_SDK = "$($vulkanPath.FullName)\Bin"
          $env:PATH = "$env:VULKAN_SDK;$env:PATH"

      - name: Install CMake and Clang (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install -y cmake --installargs 'ADD_CMAKE_TO_PATH=System'
          choco install -y llvm

      - name: Check VulkanSDK
        run: vulkaninfo

      - name: Checks
        run: |
          clang --version
          cmake --version

      - name: List Presets
        run: cd main && cmake --list-presets

      - name: Configure preset
        run: cd main && cmake --preset ${{ matrix.cmake_preset }}

      - name: Perform CodeQL init
        uses: github/codeql-action/init@v3
        with:
          config-file: main/.github/codeql/codeql-config.yml
          languages: ${{ matrix.language }}
          build-mode: manual

      - name: Build PoulpeEngine
        run: cd main && cmake --build --preset ${{ matrix.cmake_preset }}

      - name: Perform CodeQL analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"